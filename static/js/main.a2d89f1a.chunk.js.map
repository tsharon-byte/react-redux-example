{"version":3,"sources":["App.js","index.js"],"names":["changeFirstName","firstName","type","data","changeLastName","lastName","WrappedApp","connect","state","dispatch","firstNameChange","bindActionCreators","lastNameChange","props","console","log","className","value","placeholder","onChange","event","target","defaultState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"gQAkCA,SAASA,EAAgBC,GACrB,MAAO,CACHC,KA/BkB,oBAgClBC,KAAMF,GAId,SAASG,EAAeC,GACpB,MAAO,CACHH,KApCiB,mBAqCjBC,KAAME,GAkBd,IACeC,EADIC,aAPnB,SAAyBC,GACrB,MAAO,CACHP,UAAWO,EAAMP,UACjBI,SAAUG,EAAMH,aAVxB,SAA+BI,GAC3B,MAAO,CACHC,gBAAiBC,YAAmBX,EAAiBS,GACrDG,eAAgBD,YAAmBP,EAAgBK,MAWxCF,EArDnB,SAAaM,GACTC,QAAQC,IAAIF,GADI,IAEXZ,EAAwDY,EAAxDZ,UAAWI,EAA6CQ,EAA7CR,SAAUK,EAAmCG,EAAnCH,gBAAiBE,EAAkBC,EAAlBD,eAC3C,OACI,yBAAKI,UAAU,OACX,6BACI,2BAAOd,KAAK,OACLc,UAAU,UACVC,MAAOhB,EACPiB,YAAY,aACZC,SAAU,SAACC,GAAD,OAAWV,EAAgBU,EAAMC,OAAOJ,WAE7D,6BACI,2BAAOf,KAAK,OACLc,UAAU,UACVC,MAAOZ,EACPa,YAAY,YACZC,SAAU,SAACC,GAAD,OAAWR,EAAeQ,EAAMC,OAAOJ,WAG5D,yBAAKD,UAAU,WAAf,qBAAwCf,EAAxC,YAAqDI,QCvB3DiB,EAAe,CACjBrB,UAAW,GACXI,SAAU,IAkBd,IAAIkB,EAAQC,aAXZ,WAAgD,IAA/BhB,EAA8B,uDAAtBc,EAAcG,EAAQ,uCAC3C,OAAQA,EAAOvB,MACX,IANkB,oBAOd,OAAO,eAAIM,EAAX,CAAkBP,UAAWwB,EAAOtB,OACxC,IANiB,mBAOb,OAAO,eAAIK,EAAX,CAAkBH,SAAUoB,EAAOtB,OACvC,QACI,OAAOK,MAMnBkB,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,EAAD,OAEJK,SAASC,eAAe,W","file":"static/js/main.a2d89f1a.chunk.js","sourcesContent":["import React from 'react';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\"\nimport './App.css';\n\nconst CHANGE_FIRST_NAME = \"CHANGE_FIRST_NAME\";\n\nconst CHANGE_LAST_NAME = \"CHANGE_LAST_NAME\";\n\nfunction App(props) {\n    console.log(props);\n    let {firstName, lastName, firstNameChange, lastNameChange} = props;\n    return (\n        <div className=\"App\">\n            <div>\n                <input type=\"text\"\n                       className=\"control\"\n                       value={firstName}\n                       placeholder=\"First name\"\n                       onChange={(event) => firstNameChange(event.target.value)}/>\n            </div>\n            <div>\n                <input type=\"text\"\n                       className=\"control\"\n                       value={lastName}\n                       placeholder=\"Last name\"\n                       onChange={(event) => lastNameChange(event.target.value)}\n            />\n            </div>\n            <div className=\"control\">{`Your name: ${firstName} ${lastName}`}</div>\n        </div>\n    );\n}\n\nfunction changeFirstName(firstName) {\n    return {\n        type: CHANGE_FIRST_NAME,\n        data: firstName\n    };\n}\n\nfunction changeLastName(lastName) {\n    return {\n        type: CHANGE_LAST_NAME,\n        data: lastName\n    };\n}\n\nfunction putDispatchToHandlers(dispatch) {\n    return {\n        firstNameChange: bindActionCreators(changeFirstName, dispatch),\n        lastNameChange: bindActionCreators(changeLastName, dispatch)\n    };\n}\n\nfunction putStateToProps(state) {\n    return {\n        firstName: state.firstName,\n        lastName: state.lastName\n    }\n}\n\nconst WrappedApp = connect(putStateToProps, putDispatchToHandlers)(App);\nexport default WrappedApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WrappedApp from './App';\nimport {Provider} from \"react-redux\"\nimport {createStore} from \"redux\";\n\nconst defaultState = {\n    firstName: \"\",\n    lastName: \"\"\n};\n\nconst CHANGE_FIRST_NAME = \"CHANGE_FIRST_NAME\";\n\nconst CHANGE_LAST_NAME = \"CHANGE_LAST_NAME\";\n\nfunction reducer(state = defaultState, action) {\n    switch (action.type) {\n        case CHANGE_FIRST_NAME:\n            return {...state, firstName: action.data};\n        case CHANGE_LAST_NAME:\n            return {...state, lastName: action.data};\n        default:\n            return state;\n    }\n}\n\nlet store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <WrappedApp/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}